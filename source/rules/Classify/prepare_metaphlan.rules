localrules:
    download_metaphlan

rule download_metaphlan:
    output:
        opj(config["resource_path"],"metaphlan2","mpa_v20_m200.tar"),
        opj(config["resource_path"],"metaphlan2","mpa_v20_m200.fna"),
        opj(config["resource_path"],"metaphlan2","mpa_v20_m200.md5")
    params:
        outdir = opj(config["resource_path"],"metaphlan2")
    shell:
        """
        curl -L -o {output[0]} https://bitbucket.org/biobakery/metaphlan2/downloads/mpa_v20_m200.tar
        tar -C {params.outdir} -x -f {output[0]}
        curl -L -o {output[2]} https://bitbucket.org/biobakery/metaphlan2/downloads/mpa_v20_m200.md5
        bunzip2 {params.outdir}/mpa_v20_m200.fna.bz2
        """

rule bowtiebuild_metaphlan:
    input:
        opj(config["resource_path"],"metaphlan2","mpa_v20_m200.fna"),
        opj(config["resource_path"],"metaphlan2","mpa_v20_m200.md5")
    output:
        expand(opj(config["resource_path"],"metaphlan2","mpa_v20_m200.{index}.bt2"), index = range(1,5)),
        expand(opj(config["resource_path"],"metaphlan2","mpa_v20_m200.rev.{rev_index}.bt2"), rev_index = range(1,3))
    params:
        prefix = opj(config["resource_path"],"metaphlan2","mpa_v20_m200")
    threads: 10
    resources:
        runtime = lambda wildcards, attempt: attempt**2*60*48
    shell:
        """
        bowtie2-build --threads {threads} {input[0]} {params.prefix}
        """

