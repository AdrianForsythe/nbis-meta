localrules:
    index_bam

rule index_filtered_genomes:
    input:
        opj(config["results_path"],"refmap","downloads","genome_list.tab")
    output:
        opj(config["results_path"],"refmap","bowtie2","filtered.fna"),
        expand(opj(config["results_path"],"refmap","bowtie2","filtered.fna.{index}.bt2l"),index=range(1,5)),
        expand(opj(config["results_path"],"refmap","bowtie2","filtered.fna.rev.{index}.bt2l"),index=range(1,3))
    params:
        dldir = opj(config["results_path"],"refmap","downloads"),
        btdir = opj(config["results_path"],"refmap","bowtie2")
    resources:
        runtime = lambda wildcards, attempt: attempt**2*60*4
    threads: 4
    shell:
        """
        mkdir -p {params.btdir}
        cat {params.dldir}/*/*genomic.fna > {output[0]}
        bowtie2-build --threads {threads} --large-index {output[0]} {output[0]}
        """

rule map_to_filtered_pe:
    input:
        R1 = opj(config["intermediate_path"],"preprocess","{sample}_{run}_R1"+PREPROCESS+".fastq.gz"),
        R2 = opj(config["intermediate_path"],"preprocess","{sample}_{run}_R2"+PREPROCESS+".fastq.gz"),
        index = expand(opj(config["results_path"],"refmap","bowtie2","filtered.fna.{index}.bt2l"),index=range(1,5))
    output:
        opj(config["results_path"],"refmap","bowtie2","{sample}_{run}_pe","{sample}_{run}_pe.sorted.bam")
    threads: 10
    params:
        prefix = opj(config["results_path"],"refmap","bowtie2","filtered.fna"),
        tmp_out = opj(config["scratch_path"],"{sample}_{run}_pe.refmap.bam")
    resources:
        runtime = lambda wildcards, attempt: attempt**2*60*2
    shell:
        """
        bowtie2 -p {threads} -x {params.prefix} -1 {input.R1} -2 {input.R2} | samtools view -bh - | samtools sort \
        -o {params.tmp_out}
        mv {params.tmp_out} {output[0]}
        """

rule map_to_filtered_se:
    input:
        se = opj(config["intermediate_path"],"preprocess","{sample}_{run}_se"+PREPROCESS+".fastq.gz"),
        index = expand(opj(config["results_path"],"refmap","bowtie2","filtered.fna.{index}.bt2l"),index=range(1,5))
    output:
        opj(config["results_path"],"refmap","bowtie2","{sample}_{run}_se","{sample}_{run}_se.sorted.bam")
    threads: 10
    params:
        prefix = opj(config["results_path"],"refmap","bowtie2","filtered.fna"),
        tmp_out = opj(config["scratch_path"],"{sample}_{run}_se.refmap.bam")
    resources:
        runtime = lambda wildcards, attempt: attempt**2*60*2
    shell:
        """
        bowtie2 -p {threads} -x {params.prefix} -U {input.se} | samtools view -bh - | samtools sort -o {params.tmp_out}
        mv {params.tmp_out} {output[0]}
        """

rule index_bam:
    input:
        opj(config["results_path"],"refmap","bowtie2","{sample}_{run}_{seq_type}","{sample}_{run}_{seq_type}.sorted.bam")
    output:
        opj(config["results_path"],"refmap","bowtie2","{sample}_{run}_{seq_type}","{sample}_{run}_{seq_type}.sorted.bam.bai")
    shell:
        """
        samtools index {input[0]}
        """