rule run_diamond:
    input:
        faa=opj(config["results_path"],"annotation","{group}","final_contigs.faa"),
        taxonmap = opj(config["taxdb"],"{}.accession2taxid.gz".format(config["diamond_dbtype"])),
        nodes = opj(config["taxdb"],"nodes.dmp"),
        db=config["diamond_protdb"]
    output:
        opj(config["results_path"],"annotation","{group}","final_contigs.diamond")
    params:
      diamond_params="-f 6 staxids --seq yes --more-sensitive --no-auto-append --top 10",
      tmp=opj(config["tmpdir"],"{group}.diamond_run.tmp")
    threads: config["diamond_threads"]
    resources:
        runtime = lambda wildcards, attempt: attempt**2*60*4
    shell:
        """
        diamond blastp --taxonmap {input.taxonmap} --taxonnodes {input.nodes} \
         -d {input.db} -q {input.faa} -o {params.tmp} -p {threads} {params.diamond_params}
        mv {params.tmp} {output}
        """

rule assign_taxonomy:
    input:
        diamond_input_file=opj(config["results_path"],"annotation","{group}","final_contigs.diamond"),
        gid_taxaid_mapping_file=opj(config["taxdb"],config["diamond_dbtype"]+".accession2taxid.gz"),
        gff_file=opj(config["results_path"],"annotation","{group}","final_contigs.features.gff"),
        lineage_file=opj(config["taxdb"],config["diamond_dbtype"]+".lineage")
    output:
        genes=opj(config["results_path"],"annotation","{group}","taxonomy","taxonomy_genes.tab"),
        contigs=opj(config["results_path"],"annotation","{group}","taxonomy","taxonomy_contigs.tab"),
        genes_from_contigs=opj(config["results_path"],"annotation","{group}","taxonomy","taxonomy_genes_from_contigs.tab")
    params:
        prefix = opj(config["scratch_path"],"{group}","taxonomy","taxonomy"),
        prefix_dirname = os.path.dirname(opj(config["scratch_path"],"{group}","taxonomy","taxonomy")),
        outdir = os.path.dirname(opj(config["results_path"],"annotation","{group}","taxonomy","taxonomy_genes.tab"))
    resources:
        runtime = lambda wildcards, attempt: attempt**2*60*2
    shell:
        """
        mkdir -p {params.prefix_dirname}
        mkdir -p {params.outdir}
        gzip -c input.gid_taxaid_mapping_file > {params.prefix_dirname}/map

        python source/utils/ClassifyTaxonomy.py -i {input.diamond_input_file} -a {params.prefix_dirname}/map \
        -b {input.gff_file} -l {input.lineage_file} -o {params.prefix}

        mv {params.prefix}* {params.outdir}
        rm -r {params.prefix_dirname}
        """


