name: CI

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
    branches:
      - master
env:
  TMPDIR: /tmp

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: s-weigand/setup-conda@v1
    - name: Install the conda environment
      run: conda env update -n base -f environment.yml
    - name: Dry run
      run: snakemake --use-conda -j 4 --configfile .test/config/dry-run.yaml -n
    - name: Cutadapt
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/cutadapt.yaml -p --notemp qc
        snakemake -j 1 --configfile .test/config/cutadapt.yaml --report report.html qc
    - name: Upload cutadapt report
      uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-cutadapt.html
        path: report.html
    - name: Preprocess
      run: |
        rm -rf results report.html
        snakemake --use-conda -j 4 --configfile .test/config/preprocess.yaml -p qc
        snakemake --use-conda -j 4 --configfile .test/config/preprocess.yaml -p --report report.html qc
    - name: Upload samples report
      uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-samples_report.html
        path: report.html
    - name: Kraken
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/kraken.yaml -p results/kraken/sample1_1_pe.kreport results/kraken/sample4_1_se.kreport
    - name: Metaspades + annotation
      run: |
        bash .test/scripts/prep_eggnog.sh
        snakemake --use-conda -j 4 --configfile .test/config/metaspades.yaml -p annotate
        rm -r results/assembly results/report examples/data/sample*
    - name: Prepare taxonomy
      run: bash .test/scripts/prep_taxonomy.sh
    - name: Taxonomy
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/taxonomy.yaml -p taxonomy
        rm -r results examples/data/sample*
    - name: Metabat
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/metabat.yaml -p bin assemble
        snakemake --use-conda -j 4 --configfile .test/config/metabat.yaml -p --report report.html bin assemble
    - name: Upload snakemake report
      uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-test_report.html
        path: report.html

  test_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: s-weigand/setup-conda@v1
    - name: Install the conda environment
      run: conda env update -n base -f environment.yml
    - name: Set up checkm database
      uses: actions/cache@v2
      env:
        cache-name: checkm-db
      with:
        path: resources/checkm
        key: ${{ runner.os }}-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}
          ${{ runner.os }}-
    - name: Kraken
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/kraken.yaml --notemp -p classify
        rm -r examples/data/sample* results
    - name: Binning
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/binning.yaml -p assemble bin
    - name: Snakemake report
      run: |
        snakemake --use-conda -j 4 --configfile .test/config/binning.yaml -p --report report.html assemble bin
    - name: Upload snakemake report
      uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}-test_linux_report.html
        path: report.html
